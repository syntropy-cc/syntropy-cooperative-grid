---
# Syntropy Cooperative Grid - Ansible Inventory
# Generated by Terraform

all:
  children:
    syntropy_nodes:
      hosts:
        %{ for node in nodes ~}
        ${node.tags.Name}:
          ansible_host: ${node.public_ip}
          ansible_user: admin
          ansible_ssh_private_key_file: ~/.ssh/id_rsa
          node_id: ${node.tags.NodeID}
          coordinates: ${node.tags.Coordinates}
          description: ${node.tags.Description}
          instance_id: ${node.id}
          private_ip: ${node.private_ip}
          environment: ${node.tags.Environment}
        %{ endfor ~}
      vars:
        ansible_python_interpreter: /usr/bin/python3
        syntropy_platform_version: "2.0.0"
        syntropy_environment: "${environment}"
        
    syntropy_edge_nodes:
      hosts:
        %{ for node in nodes ~}
        %{ if contains(keys(node.tags), "NodeType") && node.tags.NodeType == "edge" ~}
        ${node.tags.Name}:
          ansible_host: ${node.public_ip}
          ansible_user: admin
          ansible_ssh_private_key_file: ~/.ssh/id_rsa
          node_id: ${node.tags.NodeID}
          coordinates: ${node.tags.Coordinates}
          description: ${node.tags.Description}
          instance_id: ${node.id}
          private_ip: ${node.private_ip}
          environment: ${node.tags.Environment}
          node_type: edge
        %{ endif ~}
        %{ endfor ~}
      vars:
        ansible_python_interpreter: /usr/bin/python3
        node_capabilities:
          - edge_computing
          - sensor_data
          - lightweight_services
          
    syntropy_server_nodes:
      hosts:
        %{ for node in nodes ~}
        %{ if !contains(keys(node.tags), "NodeType") || node.tags.NodeType != "edge" ~}
        ${node.tags.Name}:
          ansible_host: ${node.public_ip}
          ansible_user: admin
          ansible_ssh_private_key_file: ~/.ssh/id_rsa
          node_id: ${node.tags.NodeID}
          coordinates: ${node.tags.Coordinates}
          description: ${node.tags.Description}
          instance_id: ${node.id}
          private_ip: ${node.private_ip}
          environment: ${node.tags.Environment}
          node_type: server
        %{ endif ~}
        %{ endfor ~}
      vars:
        ansible_python_interpreter: /usr/bin/python3
        node_capabilities:
          - container_orchestration
          - resource_sharing
          - cooperative_computing
          - distributed_storage
          - service_mesh
          - universal_applications
